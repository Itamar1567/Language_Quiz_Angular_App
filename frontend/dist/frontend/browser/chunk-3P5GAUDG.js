var p=Object.defineProperty,q=Object.defineProperties;var r=Object.getOwnPropertyDescriptors;var j=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var l=(a,b)=>(b=Symbol[a])?b:Symbol.for("Symbol."+a);var m=(a,b,c)=>b in a?p(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,s=(a,b)=>{for(var c in b||={})n.call(b,c)&&m(a,c,b[c]);if(j)for(var c of j(b))o.call(b,c)&&m(a,c,b[c]);return a},t=(a,b)=>q(a,r(b));var u=a=>typeof a=="symbol"?a:a+"",v=(a,b)=>{var c={};for(var d in a)n.call(a,d)&&b.indexOf(d)<0&&(c[d]=a[d]);if(a!=null&&j)for(var d of j(a))b.indexOf(d)<0&&o.call(a,d)&&(c[d]=a[d]);return c};var w=(a,b,c)=>new Promise((d,g)=>{var f=e=>{try{h(c.next(e))}catch(i){g(i)}},k=e=>{try{h(c.throw(e))}catch(i){g(i)}},h=e=>e.done?d(e.value):Promise.resolve(e.value).then(f,k);h((c=c.apply(a,b)).next())});var x=(a,b,c)=>(b=a[l("asyncIterator")])?b.call(a):(a=a[l("iterator")](),b={},c=(d,g)=>(g=a[d])&&(b[d]=f=>new Promise((k,h,e)=>(f=g.call(a,f),e=f.done,Promise.resolve(f.value).then(i=>k({value:i,done:e}),h)))),c("next"),c("return"),b);export{s as a,t as b,u as c,v as d,w as e,x as f};
